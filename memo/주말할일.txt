1. 아웃풋 이미지 

2. 도메인 분석
관점 별로 이렇게 나눴고
이런 문제가 있다
1) 데이터 관점: ERD그려보기? 중복이 가장 큰 문제
   ex. 상품과 재고의 분리? 스키마를 그려봐야해
2) 비즈니스 시나리오 관점: 시뮬레이션 필요
   신규 시나리오가 추가되었을때 로직 변동, 유지성( 디펜던시)
   얘가 바뀌엇을 때 다른애를 얼마나 많이 변경 시키는지?
3) 장애 격리 관점

관점 별 고객, 퍼포먼스 등을 기준으로 한 점수와 가중치 합산하여
최적의 분석 or 믹싱해서 새로운 분석
- 보리스 다이어그램으로 콜수 나누기? 동기/비동기


3. 구현을 뭘 해볼까(스프링부트)
git hub에서 fork
user / order / product
인텔리 J (IDE) h2(데이터베이스) 다운
build.gradle을 보기

상품 주문 회원 마이뷰
동기/비동기 통신 들어가있고

토이 프로젝트에서 더 개발 했다

패턴 추가하는 거????
예. 마이뷰(주문, 회원정보, 포인트) 일 때 composition 사용

회사 별로 차별점이있나?


* 관점 3개를 가져가지 말고 이런 흐름도 있음
1. ~~~ 기준으로 어그리게이트 묶음
2. 개체 관계 다이어그램 ERD
3. 
x축 데이터 스키마
y축 api 콜
---> 너무 많이 참조하는 부분은 논의가 필요해
---> 하나의 서비스로 되는 것이 좋다
4. 동기/비동기 나눠서 개발을 해봣고
5. 어쩔수없이 3개참조 요런거는 composition이 필요할 것 같다


일부 기능 확장, 결함 격리 -> 장점을 최대한 살리는 아키텍처 설계
트랜잭션(commit, rollback) 관리, 데이터조합(query) -> 이를 보완할 수 있는 구조로 수정, 패턴